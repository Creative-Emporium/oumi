# Job config to GRPO tune "Qwen2-0.5B-Instruct" with DDP on GCP.
#
# Requirements:
#   - Set up SkyPilot GCP: https://oumi.ai/docs/en/latest/user_guides/launch/launch.html#setup
#   - Log into WandB (`wandb login`) or disable `enable_wandb`
#
# Usage:
#   oumi launch up -c configs/examples/grpo_tldr/gcp_job.yaml --cluster tiny-qwen-grpo
#
# See Also:
#   - Documentation: https://oumi.ai/docs/en/latest/user_guides/launch/launch.html
#   - Config class: oumi.core.configs.JobConfig
#   - Config source: https://github.com/oumi-ai/oumi/blob/main/src/oumi/core/configs/job_config.py
#   - Other job configs: configs/**/*job.yaml

name: tiny-qwen-grpo

resources:
  cloud: gcp
  accelerators: "A100:4"
  use_spot: false

working_dir: .

file_mounts:
  ~/.netrc: ~/.netrc  # WandB credentials

envs:
  WANDB_PROJECT: oumi-train
  OUMI_RUN_NAME: tiny-qwen.grpo

setup: |
  set -e
  pip install uv && uv pip install oumi[gpu]
  pip install -U flash-attn --no-build-isolation

run: |
  set -e  # Exit if any command failed.
  # export SKYPILOT_NUM_GPUS_PER_NODE=3
  # CUDA_VISIBLE_DEVICES="0,1,2"
  source ./configs/examples/misc/sky_init.sh

  pip install -e ".[gpu]"
  pip install "vllm>=0.7.3"
  # pip install "trl>=0.15.0,<0.16.0"
  pip install -U "trl" "accelerate"

  oumi env

  export PER_DEVICE_BATCH_SIZE=2
  export GLOBAL_BATCH_SIZE=$((${OUMI_TOTAL_NUM_GPUS} * ${PER_DEVICE_BATCH_SIZE}))

  export VLLM_LOGGING_LEVEL=DEBUG
  export VLLM_TRACE_FUNCTION=1

  set -x
  # oumi distributed torchrun \
  # oumi distributed accelerate launch \

  accelerate launch --multi_gpu \
      --num_machines=1    \
      --machine_rank=0    \
      --num_processes=3   \
      --main_process_ip="${OUMI_MASTER_ADDR}" \
      --main_process_port=8007 \
      -m oumi train \
      -c configs/examples/grpo_tldr/train.yaml \
      --training.run_name="${OUMI_RUN_NAME}.${SKYPILOT_TASK_ID}" \
      --training.per_device_train_batch_size=2 \
      --training.grpo.num_generations=6 \
      --training.max_steps=5 \
      --training.save_steps=0 \
      --training.save_final_model=true

  echo "Node ${SKYPILOT_NODE_RANK} is all done!"
