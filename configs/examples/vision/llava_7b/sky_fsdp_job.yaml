name: llava-7b-sft

num_nodes: 1 # Set it to N for multi-node training.

resources:
  accelerators: { "A100-40GB": 4 }
  any_of:
    - use_spot: true
    - use_spot: false
  disk_size: 500 # Disk size in GBs

# Upload working directory to remote ~/sky_workdir.
workdir: .

# Mount local files.
file_mounts:
  ~/.netrc: ~/.netrc # WandB credentials

envs:
  WANDB_PROJECT: oumi-train
  OUMI_RUN_NAME: llava.7b.sft
  ACCELERATE_LOG_LEVEL: info
  TOKENIZERS_PARALLELISM: false

setup: |
  set -e
  pip install uv && uv pip install '.[gpu]'
  # Install model from HF Hub. This tool increases download speed compared to
  # downloading the model during training.
  pip install hf_transfer
  HF_HUB_ENABLE_HF_TRANSFER=1 huggingface-cli download llava-hf/llava-1.5-7b-hf

run: |
  set -e  # Exit if any command failed.
  source ./configs/examples/misc/sky_init.sh

  set -x  # Print "torchrun" command with expanded variables
  accelerate launch \
      --num_machines ${OUMI_NUM_NODES} \
      --machine_rank ${SKYPILOT_NODE_RANK} \
      --num_processes ${OUMI_TOTAL_NUM_GPUS} \
      --main_process_ip ${OUMI_MASTER_ADDR} \
      --main_process_port 8007 \
      --use_fsdp \
      --config_file configs/examples/vision/llava_7b/accelerate.yaml \
      -m oumi.train \
      -c configs/examples/vision/llava_7b/sft_train.yaml \
      "training.run_name='${OUMI_RUN_NAME}.${SKYPILOT_TASK_ID}'" \
      "training.max_steps=20" \
      "training.save_steps=0" \
      "training.save_final_model=false" \
      "training.per_device_train_batch_size=16" \
      "training.gradient_accumulation_steps=1" \
      "training.enable_gradient_checkpointing=False"

  echo "Node ${SKYPILOT_NODE_RANK} is all done!"


#  4PUS
#  sky launch -i 10 --env OUMI_RUN_NAME=llava.7b.sft.vqav2-small.frozen-vision.4xA10040GB.20steps.v101 --cloud GCP --use-spot --num-nodes 1 --gpus "A100:4" --cluster xrdaukar-1node4gpu-01-lema-cluster ./configs/examples/vision/llava_7b/sky_fsdp_job.yaml
